plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    ext {
        set('springCloudVersion', "2023.0.0")
    }



    dependencies {
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':UserManageApi') {
    dependencies {
//        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // mongoDB
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

        // WebFlux
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        testImplementation 'io.projectreactor:reactor-test:3.4.29'

        // json
        implementation 'com.auth0:java-jwt:4.4.0'

        // CircuitBreaker
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    }
}


project(':NoticeBoardApi') {
    dependencies {
        // discoveryClient
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // mongoDB
        implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

        // WebFlux
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        testImplementation 'io.projectreactor:reactor-test:3.4.29'

        // CircuitBreaker
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    }
}

project(':ServiceDiscovery'){
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }
}

project(':ApiGateway'){
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

        // json
        implementation 'com.auth0:java-jwt:4.4.0'

        // WebFlux
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        testImplementation 'io.projectreactor:reactor-test:3.4.29'
    }
}

project(':OcrApi') {
    dependencies {
        // discoveryClient
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // WebFlux
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        testImplementation 'io.projectreactor:reactor-test:3.4.29'

        // CircuitBreaker
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    }
}

project(':ApiConfig'){
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-config-server'
    }
}

bootJar.enabled = false